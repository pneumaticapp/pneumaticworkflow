name: pneumatic
services:
  postgres:
    image: postgres:15-bookworm
    container_name: pneumatic-postgres
    env_file:
      - ./config/postgres.env
    volumes:
      - ./postgres/data:/var/lib/postgresql/data:rw
      - ./postgres/backups:/backups:rw
    expose:
      - 5432
    networks:
      - pneumatic
    restart: always

  redis:
    # Newest version not working on old linux kernels
    image: redis:6.2.6
    container_name: pneumatic-redis
    command: >
      redis-server
      --loglevel warning
      --databases 16
      --dbfilename dump.rdb
      --dir /data
      --requirepass redis_password
      --save 20 1 300 100 60 10000
    volumes:
      - ./redis/data:/data
    expose:
      - 6379
    networks:
      - pneumatic
    restart: always

  rabbitmq:
    container_name: pneumatic-rabbitmq
    image: rabbitmq:3.13-management
    expose:
      - 5672    # broker url
    ports:
      - 15672:15672  # admin panel
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/
      - ./rabbitmq/log/:/var/log/rabbitmq
    env_file:
      - ./config/rabbitmq.env
    networks:
      - pneumatic

  backend:
    build:
      context: ./backend
    container_name: pneumatic-backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             python manage.py compilemessages &&
             gunicorn src.asgi:application --workers 2 -k uvicorn.workers.UvicornWorker --worker-tmp-dir /dev/shm --bind unix:/tmp/gunicorn/pneumatic-backend.sock --timeout 200"
    env_file:
      - ./config/project.env
      - ./config/postgres.env
      - ./config/backend.env
    volumes:
      - ./backend:/pneumatic_backend
      - backend-socket:/tmp/gunicorn
      - backend-staticfiles:/pneumatic_backend/staticfiles
    depends_on:
      - postgres
      - rabbitmq
      - redis
    healthcheck:
      test: ["CMD", "pg_isready", "-h", postgres]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - pneumatic
    restart: always

  celery:
    build:
      context: ./backend
    container_name: pneumatic-celery
    env_file:
      - ./config/project.env
      - ./config/postgres.env
      - ./config/backend.env
    volumes:
      - ./backend:/pneumatic_backend
    command: >
      sh -c "celery -A src worker -l warning"
    depends_on:
      - postgres
      - rabbitmq
      - redis
    networks:
      - pneumatic
    restart: always

  celery-beat:
    build:
      context: ./backend
    container_name: pneumatic-celery-beat
    env_file:
      - ./config/project.env
      - ./config/postgres.env
      - ./config/backend.env
    volumes:
      - ./backend:/pneumatic_backend
    command: celery --pidfile= -A src beat -l warning -S django
    depends_on:
      - postgres
      - rabbitmq
      - redis
    networks:
      - pneumatic
    restart: always

  frontend:
    build:
      context: ./frontend
    container_name: pneumatic-frontend
    env_file:
      - ./config/project.env
      - ./config/frontend.env
    command: >
      sh -c "npm run build-client:prod && pm2-runtime start pm2.json"
    expose:
      - 8000
    volumes:
      - ./frontend:/pneumatic_frontend
      - ./frontend/logs:/tmp/logs
    networks:
      - pneumatic
    restart: always

  nginx:
    build:
      context: ./nginx
    container_name: pneumatic-nginx
    env_file:
      - ./config/project.env
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/
      - NGINX_ENVSUBST_TEMPLATE_DIR=/etc/nginx/templates
    volumes:
      - ./nginx/logs/:/var/log/nginx/
      - ./nginx/keys/:/etc/keys/:ro
      - ./nginx/www/:/var/www/:ro
      - ./nginx/templates/:/etc/nginx/templates
      - backend-socket:/tmp/gunicorn/
      - backend-staticfiles:/tmp/backend-staticfiles/
    ports:
      - 80:80
      - 443:443
      - 8001:8001
    networks:
      - pneumatic
    depends_on:
      - backend
      - frontend
    restart: always

networks:
  pneumatic:

volumes:
  backend-staticfiles:
  backend-socket:
