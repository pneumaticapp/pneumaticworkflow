[tool.poetry]
name = "pneumatic-files"
version = "1.0.0"
description = "File proxy microservice with Google Cloud Storage"
authors = ["Pneumatic Team"]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "0.116.1"
uvicorn = "0.35.0"
python-multipart = "0.0.20"
sqlalchemy = "2.0.42"
asyncpg = "0.30.0"
pydantic = "2.11.7"
pydantic-settings = "2.10.1"
aioboto3 = "15.0.0"
httpx = "0.28.1"
redis = "6.2.0"
alembic = "1.16.4"
PyJWT = "2.10.0"

[tool.poetry.group.dev.dependencies]
mypy = "1.18.2"
ruff = "0.14.0"
pre-commit = "4.3.0"
pytest = "8.4.2"
pytest-asyncio = "1.2.0"
pytest-mock = "^3.15.1"
aiosqlite = "^0.21.0"
types-redis = "^4.6.0.20241004"

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true
namespace_packages = true
pretty = true
show_traceback = true
disallow_untyped_calls = true
strict_optional = true
implicit_reexport = false
show_error_context = true
scripts_are_modules = true
ignore_missing_imports = true
exclude = ["alembic", "tests/", "migrations"]
mypy_path = "src"
plugins = ["sqlalchemy.ext.mypy.plugin", "pydantic.mypy"]

[tool.ruff]
target-version = "py311"
line-length = 79
exclude = ["alembic", "tests", "migrations"]

[tool.ruff.lint]
select = ["I", "ASYNC", "S", "T20", "SIM", "E", "W", "C90", "PL", "F"]
ignore = ["S301", "S110", "S104", "S101", "S105"]

[tool.ruff.lint.pylint]
max-args = 8

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
