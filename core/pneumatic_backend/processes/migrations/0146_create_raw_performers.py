# Generated by Django 2.2.24 on 2021-09-07 15:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from pneumatic_backend.generics.mixins.models import SoftDeleteMixin


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0082_auto_20210817_0931'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('processes', '0145_create_still_kickoff_draft_kickoff_id'),
    ]

    operations = [
        migrations.AddField(
            model_name='template',
            name='performers_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.CreateModel(
            name='TaskPerformer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='processes.Task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'task')},
            },
        ),
        migrations.CreateModel(
            name='RawPerformerTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('user', 'user'), ('group', 'group'), ('workflow_starter', 'workflow_starter'), ('field', 'field')], max_length=100)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Account')),
                ('field', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='raw_performers', to='processes.FieldTemplate')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_performers', to='processes.TaskTemplate')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_performers', to='processes.Template')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('api_name', models.CharField(max_length=100, null=True, blank=True, help_text='For quick access to the api_name field ')),

            ],
            options={
                'abstract': False,
            },
            bases=(SoftDeleteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='RawPerformer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('user', 'user'), ('group', 'group'), ('workflow_starter', 'workflow_starter'), ('field', 'field')], max_length=100)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Account')),
                ('field', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='raw_performers', to='processes.TaskField')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_performers', to='processes.Task')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_performers', to='processes.Workflow')),
                ('api_name', models.CharField(max_length=100, null=True, blank=True, help_text='For quick access to the api_name field ')),
                ('template_id', models.IntegerField(null=True)),
                ('task_performer_id', models.IntegerField(null=True))
            ],
            options={
                'abstract': False,
            },
            bases=(SoftDeleteMixin, models.Model),
        ),
        migrations.AddField(
            model_name='task',
            name='performers',
            field=models.ManyToManyField(through='processes.TaskPerformer', to=settings.AUTH_USER_MODEL),
        ),
    ]
