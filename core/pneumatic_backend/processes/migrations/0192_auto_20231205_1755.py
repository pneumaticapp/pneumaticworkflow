# Generated by Django 2.2 on 2023-12-05 17:55

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import pneumatic_backend.generics.mixins.models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0114_contact_account'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('processes', '0191_auto_20230810_1204'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='taskperformer',
            options={'ordering': ('user_id',)},
        ),
        migrations.AlterField(
            model_name='fileattachment',
            name='comment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='processes.Comment'),
        ),
        migrations.CreateModel(
            name='WorkflowEvent',
            options={'ordering': ('-created',),  'abstract': False,},
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('type', models.IntegerField(choices=[(0, 'Workflow started'), (1, 'Workflow completed'), (2, 'Task started'), (3, 'Task completed'), (4, 'Task reverted'), (9, 'Task skipped'), (5, 'New comment'), (6, 'Workflow finished'), (7, 'Workflow snoozed from template'), (17, 'Workflow snoozed'), (8, 'Workflow reverted'), (10, 'Workflow finished by condition'), (11, 'Workflow is urgent'), (12, 'Workflow is not urgent'), (13, 'Task skipped as no performers were assigned'), (14, 'Performer added to task'), (15, 'Performer deleted from task'), (16, 'Workflow resumed'), (18, 'Due date changed')], verbose_name='type')),
                ('status', models.CharField(max_length=20, choices=[('created', 'created'), ('updated', 'updated'), ('deleted', 'deleted')], default='created')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(null=True)),
                ('task_json', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('delay_json', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('target_user_id', models.IntegerField(null=True)),
                ('with_attachments', models.BooleanField(default=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Account')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='processes.Workflow')),
                ('search_content', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
            bases=(pneumatic_backend.generics.mixins.models.SoftDeleteMixin, models.Model),
        ),
        migrations.AddField(
            model_name='fileattachment',
            name='event',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='processes.WorkflowEvent'),
        ),
        migrations.RunSQL(
            sql='''
                CREATE TRIGGER processes_workflowevent_ins 
                BEFORE INSERT OR UPDATE ON processes_workflowevent 
                    FOR EACH ROW 
                    WHEN (NEW.type=5)
                    EXECUTE PROCEDURE tsvector_update_trigger(search_content, 'pg_catalog.english', text)
        ''',
            reverse_sql='''
            DROP TRIGGER IF EXISTS processes_workflowevent_ins ON processes_workflowevent
        '''
        ),
    ]
