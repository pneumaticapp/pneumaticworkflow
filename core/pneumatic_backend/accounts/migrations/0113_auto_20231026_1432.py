# Generated by Django 2.2 on 2023-10-26 14:32

from django.conf import settings
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import pneumatic_backend.generics.mixins.models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0112_default_tenant_name'),
    ]

    operations = [
        migrations.AddField(
            model_name='userchecklist',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='userinvite',
            name='invited_from',
            field=models.CharField(choices=[('email', 'email'), ('microsoft', 'microsoft'), ('google', 'google')], default='email', max_length=16),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('first_name', models.CharField(blank=True, null=True, max_length=150)),
                ('last_name', models.CharField(blank=True, null=True, max_length=150)),
                ('photo', models.URLField(blank=True, max_length=1024, null=True)),
                ('job_title', models.CharField(blank=True, null=True, max_length=150)),
                ('source', models.CharField(choices=[('email', 'email'), ('microsoft', 'microsoft'), ('google', 'google')], max_length=255)),
                ('source_id', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('status', models.CharField(choices=[('invited', 'invited'), ('active', 'active'), ('inactive', 'inactive')], default='active', max_length=255)),
                ('search_content', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('first_name', 'last_name'),
            },
            bases=(pneumatic_backend.generics.mixins.models.SoftDeleteMixin, models.Model),
        ),
        migrations.RunSQL(
            "CREATE TRIGGER contacts_ins "
            "BEFORE INSERT OR UPDATE "
            "   ON accounts_contact FOR EACH ROW EXECUTE PROCEDURE "
            "       tsvector_update_trigger("
            "           search_content, "
            "           'pg_catalog.english', "
            "           first_name, "
            "           last_name, "
            "           job_title, "
            "           email"
            ");"
        )
    ]
